<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0, user-scalable=no">
    <title>Leave Your Light</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <!-- Carga de fuentes artísticas desde Google Fonts -->
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Playfair+Display:ital,wght@1,500&family=Poppins:wght@400;600&display=swap" rel="stylesheet">
    <style>
        body {
            font-family: 'Poppins', sans-serif;
            background-color: #111827;
            color: #F3F4F6;
            display: flex;
            justify-content: center;
            align-items: center;
            height: 100vh;
            margin: 0;
            overflow: hidden;
        }
        .container {
            text-align: center;
            background-color: #1F2937;
            padding: 2rem;
            border-radius: 1rem;
            box-shadow: 0 10px 25px rgba(0,0,0,0.5);
            width: 90%;
            max-width: 400px;
            transition: opacity 0.5s ease;
        }
        textarea {
            background-color: #374151;
            border: 2px solid #4B5563;
            color: #F3F4F6;
            border-radius: 0.5rem;
            padding: 0.75rem;
            width: 100%;
            height: 100px;
            resize: none;
            transition: border-color 0.3s, box-shadow 0.3s;
        }
        textarea:focus {
            outline: none;
            border-color: #FBBF24; /* Color dorado */
            box-shadow: 0 0 10px #FBBF24;
        }
        .btn {
            color: white;
            font-weight: bold;
            padding: 0.75rem 1.5rem;
            border-radius: 0.5rem;
            border: none;
            cursor: pointer;
            width: 100%;
            margin-top: 1rem;
            transition: background-color 0.3s, transform 0.2s;
            display: flex;
            justify-content: center;
            align-items: center;
            gap: 0.5rem;
            text-decoration: none;
        }
        .btn-primary {
            background-color: #D97706; /* Ámbar oscuro */
        }
        .btn-primary:hover {
            background-color: #B45309;
        }
        .btn-secondary {
             background-color: #4B5563;
        }
        .btn-secondary:hover {
            background-color: #6B7280;
        }
        /* NUEVO: Estilo para el botón de Instagram */
        .btn-social {
            background-color: transparent;
            border: 2px solid #818cf8;
            color: #c7d2fe;
        }
        .btn-social:hover {
            background-color: #4f46e5;
            border-color: #a5b4fc;
        }
        .btn:active {
            transform: scale(0.98);
        }
        #statusMessage {
            margin-top: 1rem;
            color: #FBBF24;
            font-weight: 500;
            height: 20px;
        }
        #downloadView {
            display: none;
        }
        #previewImage {
            max-width: 100%;
            border-radius: 0.5rem;
            border: 2px solid #4B5563;
            margin-bottom: 1rem;
        }
    </style>
</head>
<body>

    <div class="container" id="messageView">
        <h1 class="text-2xl font-bold mb-2">Leave Your Light</h1>
        <p class="text-gray-400 mb-4">Write a message of love or faith.</p>
        
        <textarea id="messageInput" placeholder="Your message..."></textarea>
        
        <button id="sendButton" class="btn btn-primary">Send My Light</button>

        <p id="statusMessage"></p>
    </div>

    <div class="container" id="downloadView">
        <h1 class="text-2xl font-bold mb-2">Thank you for your light!</h1>
        <p class="text-gray-400 mb-4">Here is your personalized souvenir.</p>
        <img id="previewImage" src="" alt="Personalized souvenir">
        
        <a id="downloadLink" href="#" download="souvenir-guaderrama-gallery.png" class="btn btn-primary block">Download Image</a>
        
        <div id="mobileSaveInstruction" style="display: none;" class="mt-4 p-3 bg-slate-800 border-2 border-dashed border-slate-600 rounded-lg">
            <p class="text-amber-400 font-semibold text-lg animate-pulse">
                Tap and hold image to save
            </p>
        </div>

        <!-- *** CAMBIO: Enlace de Instagram actualizado *** -->
        <a id="instagramLink" href="https://www.instagram.com/ivanguaderramaart/" target="_blank" class="btn btn-social">
            <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><rect x="2" y="2" width="20" height="20" rx="5" ry="5"></rect><path d="M16 11.37A4 4 0 1 1 12.63 8 4 4 0 0 1 16 11.37z"></path><line x1="17.5" y1="6.5" x2="17.51" y2="6.5"></line></svg>
            Follow us on Instagram
        </a>
        
        <button id="newButton" class="btn btn-secondary">Send another message</button>
    </div>

    <canvas id="imageCanvas" style="display: none;"></canvas>

    <script type="module">
        import { initializeApp } from "https://www.gstatic.com/firebasejs/11.6.1/firebase-app.js";
        import { getFirestore, collection, addDoc } from "https://www.gstatic.com/firebasejs/11.6.1/firebase-firestore.js";

        const firebaseConfig = {
           apiKey: "AIzaSyCz_du9pqA8Uye_Sgm4baekxg7ldqGRGko",
           authDomain: "instalacionmariposas.firebaseapp.com",
           projectId: "instalacionmariposas",
           storageBucket: "instalacionmariposas.firebasestorage.app",
           messagingSenderId: "79329581996",
           appId: "1:79329581996:web:a1fa70f3292025b85d3809",
           measurementId: "G-CK7RWVZS20"
        };

        let messagesCollectionRef;
        try {
            const app = initializeApp(firebaseConfig);
            const db = getFirestore(app);
            messagesCollectionRef = collection(db, "mural-de-luz-mensajes");
        } catch (error) {
            console.error("Firebase initialization error:", error);
            document.getElementById('statusMessage').textContent = "Connection error.";
        }

        const messageView = document.getElementById('messageView');
        const downloadView = document.getElementById('downloadView');
        const messageInput = document.getElementById('messageInput');
        const sendButton = document.getElementById('sendButton');
        const statusMessage = document.getElementById('statusMessage');
        const newButton = document.getElementById('newButton');
        const previewImage = document.getElementById('previewImage');
        const downloadLink = document.getElementById('downloadLink');

        function generateSouvenirImage(text) {
            return new Promise((resolve, reject) => {
                const canvas = document.getElementById('imageCanvas');
                const ctx = canvas.getContext('2d');
                const img = new Image();
                img.crossOrigin = "Anonymous";

                img.src = 'https://firebasestorage.googleapis.com/v0/b/instalacionmariposas.firebasestorage.app/o/C5ABD578-447A-4160-BA4A-7EA2819A924C.png?alt=media&token=959ecc5c-8e0e-4845-82a9-b4b076b5628d';

                img.onload = () => {
                    canvas.width = img.width;
                    canvas.height = img.height;
                    ctx.drawImage(img, 0, 0);
                    ctx.fillStyle = 'rgba(0, 0, 0, 0.5)';
                    ctx.fillRect(0, 0, canvas.width, canvas.height);
                    ctx.fillStyle = 'white';
                    ctx.textAlign = 'center';
                    ctx.textBaseline = 'middle';
                    
                    ctx.font = "italic 500 60px 'Playfair Display'";
                    wrapText(ctx, `"${text}"`, canvas.width / 2, canvas.height / 2, canvas.width * 0.8, 70);

                    ctx.font = "400 30px 'Poppins'";
                    ctx.fillText("Iván Guaderrama Gallery", canvas.width / 2, canvas.height - 80);

                    const dataUrl = canvas.toDataURL('image/png');
                    previewImage.src = dataUrl;
                    downloadLink.href = dataUrl;

                    if (/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)) {
                        document.getElementById('downloadLink').style.display = 'none';
                        document.getElementById('mobileSaveInstruction').style.display = 'block';
                    } else {
                        document.getElementById('downloadLink').style.display = 'block';
                        document.getElementById('mobileSaveInstruction').style.display = 'none';
                    }

                    messageView.style.display = 'none';
                    downloadView.style.display = 'block';
                    resolve();
                };

                img.onerror = () => {
                    reject(new Error("Could not load the background image."));
                };
            });
        }

        function wrapText(context, text, x, y, maxWidth, lineHeight) {
            const words = text.split(' ');
            let line = '';
            const lines = [];

            for(let n = 0; n < words.length; n++) {
                let testLine = line + words[n] + ' ';
                let metrics = context.measureText(testLine);
                let testWidth = metrics.width;
                if (testWidth > maxWidth && n > 0) {
                    lines.push(line);
                    line = words[n] + ' ';
                } else {
                    line = testLine;
                }
            }
            lines.push(line);

            let startY = y - ((lines.length - 1) * lineHeight) / 2;

            for (let i = 0; i < lines.length; i++) {
                context.fillText(lines[i].trim(), x, startY);
                startY += lineHeight;
            }
        }

        sendButton.addEventListener('click', async () => {
            const text = messageInput.value.trim();
            if (text === "") {
                statusMessage.textContent = "Please write a message.";
                return;
            }
            if (!messagesCollectionRef) {
                 statusMessage.textContent = "Cannot send. Connection error.";
                 return;
            }

            sendButton.disabled = true;
            sendButton.textContent = 'Sending...';

            try {
                await addDoc(messagesCollectionRef, { text, createdAt: new Date() });
                await generateSouvenirImage(text);
            } catch (error) {
                console.error("Error sending message or generating image:", error);
                statusMessage.textContent = "An error occurred.";
            } finally {
                sendButton.disabled = false;
                sendButton.textContent = 'Send My Light';
            }
        });

        newButton.addEventListener('click', () => {
            messageInput.value = "";
            statusMessage.textContent = "";
            downloadView.style.display = 'none';
            messageView.style.display = 'block';
        });
    </script>
</body>
</html>
